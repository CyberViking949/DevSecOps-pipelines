name: 'Deploy Cloudflare Infrastructure'

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
    secrets:
      CLOUDFLARE_ACCOUNT_ID:
        required: true
      CLOUDFLARE_API_TOKEN:
        required: true
      TF_API_TOKEN:
        required: true

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3.3.0

    # Install the preferred version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.3
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    - name: Terraform Init
      id: init
      run: terraform init
      
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -input=false -no-color -out tf.plan
      
    - name: Terraform Show
      id: show
      if: github.event_name == 'pull_request'
      run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt
      shell: bash
      
    - name: Post Plan - ${{ matrix['workspace'] }}
      if: always() && github.ref != 'refs/heads/master' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      with:
        commenter_type: plan
        commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
        commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve